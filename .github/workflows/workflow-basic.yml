name: Basic Workflow develop

#trigger
on:
    push:
       branches:
           - main

env:
    DOCKER_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/api-sessionn13          
#push on main branch


jobs:
    run-unit-test-job:
        runs-on: ubuntu-latest
        steps:
            - name: clone source code to runner
              uses: actions/checkout@v5

            # - name: install dependencies
            #   run: npm i

            # - name: run unit test
            #   run: npm run test
              
    sonarqube-code-quality-scan-job:
        runs-on: ubuntu-latest
        needs: run-unit-test-job
        steps:
            - name: Clone Source Code
              uses: actions/checkout@v4

            - name: Install dependencies
              run: npm install

            - name: SonarQube Scan
              uses: sonarsource/sonarqube-scan-action@master
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


    snyk-code-security-scan-job:
        runs-on: ubuntu-latest
        needs: run-unit-test-job
        steps:

        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'

        - name: Install Dependency Scanning Tool (Snyk)
          run: npm install -g snyk

        - name: Snyk Authentication
          run: snyk auth ${{ secrets.SNYK_TOKEN }}  
          
 # üî• Nouvelle √©tape : mise √† jour lodash avant le scan
        - name: Force upgrade vulnerable dependencies
          run: |
            npm install lodash@4.17.21 --save
            npm install

        - name: Run Snyk Vulnerability Scan
          run: snyk monitor --all-projects --org=salhimariam
          continue-on-error: false

        - name: Notify Slack on Success
          if: success()
          uses: slackapi/slack-github-action@v1.23.0
          with:
            payload: |
              {
                "text": "Snyk job successful ‚úÖ \n‚úîÔ∏è *Pipeline CI/CD Backend-api* termin√© avec succ√®s üéâ\nüîÅ Branche: `${{ github.ref_name }}`\nüîó [Voir les logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id   }})"
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

        - name: Notify Slack on Failure
          if: failure()
          uses: slackapi/slack-github-action@v1.23.0
          with:
            payload: |
              {
                "text": "‚ùå *Snyk job failed for Backend-api* ‚ùóÔ∏è\nüîÅ Branche: `${{ github.ref_name }}`\nüîó [Voir les logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      # Docker Image Scanning (Trivy)
    trivy-image-security-scan-job:
      runs-on: ubuntu-latest
      needs: run-unit-test-job
      steps:      
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Install dependencies
          run: sudo apt-get update && sudo apt-get install -y curl

        - name: Download and install Trivy
          run: |
            curl -sSL https://github.com/aquasecurity/trivy/releases/download/v0.29.0/trivy_0.29.0_Linux-64bit.tar.gz -o trivy.tar.gz
            tar xzvf trivy.tar.gz
            sudo mv trivy /usr/local/bin/
            trivy --version
        
        # Scan file system
        - name: Run trivy file system vulnerability scan
          run: |
            trivy fs --exit-code 1 --severity CRITICAL .

        - name: Build Docker image
          run: | 
            pwd
            ls
            docker buildx build -t ${{ env.DOCKER_IMAGE }} ./Dockerfile 

        - name: Run Trivy Docker image vulnerability scan
          run: |
            trivy image --exit-code 1 --severity CRITICAL ${{ env.DOCKER_IMAGE }}




    build-docker-image-and-push:
        runs-on: ubuntu-latest
        needs: [ sonarqube-code-quality-scan-job, snyk-code-security-scan-job, trivy-image-security-scan-job ]
        steps:
            - name: clone source code to runner
              uses: actions/checkout@v5

            - name: build docker image
              run: docker buildx build -t ${{ env.DOCKER_IMAGE }} .
            
            - name: tag docker image with version
              run: docker tag ${{ env.DOCKER_IMAGE }} ${{ env.DOCKER_IMAGE }}:v${{ github.run_number}}

            - run: docker images

            - run: echo ${{ vars.DOCKERHUB_USERNAME }}
            - run: echo ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                    username: ${{ vars.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: push docker image
              run: docker push ${{ env.DOCKER_IMAGE }}:v${{ github.run_number}}
            
            - name: push docker image with version latest
              run: docker push ${{ env.DOCKER_IMAGE }}:latest
                   

    deploy-to-vps:
        runs-on: ubuntu-latest
        needs: build-docker-image-and-push
        steps:
            - name: Execute remote SSH commands using password
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.VPS_HOST }}
                username: user
                password: ${{ secrets.VPS_PASSWORD }}
                script: |
                    cd /home/user/devops-script/backend-api/dev
                    sudo docker-compose pull api
                    sudo docker-compose up -d --force-recreate --remove-orphans api